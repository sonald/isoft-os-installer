set -x
arch=`uname -m`
[[ ${arch} == "mips" ]] || [[ ${arch} == "mips64" ]] && arch=mipsel
BOOT_PART=""

# for loongson
if [ ${arch} == "mipsel" ]; then
    _modules='MODULES=${MODULES}" radeon"'
else
    _modules='MODULES=${MODULES}" i915 radeon nouveau"'
fi

# set timezone to CST
/usr/bin/ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

#mkinitrd /boot/initrd-$(uname -r).img $(uname -r) --force
#mkinitrd /boot/$(ls /boot/ | grep initrd) $(ls /boot/ | grep initrd | sed "s%.img%%; s%initrd-%%") --force
#use mkinitcpio instead
echo $_modules >> /etc/mkinitcpio.conf
sed -i 's/^HOOKS="base udev/HOOKS="base udev plymouth/g' /etc/mkinitcpio.conf
mkinitcpio -p linux

## locale has been handled by installer
#i18n configuration
##echo "LANG=zh_CN.utf8" >/etc/locale.conf

#network configuration
#echo "NETWORKING=yes" >/etc/sysconfig/network
#echo "HOSTNAME=$HOSTNAME" >>/etc/sysconfig/network


cat >/etc/hosts <<EOF
# Do not remove the following line, or various programs
# that require network functionality will fail.
127.0.0.1       localhost.localdomain localhost
EOF

cat >/etc/hostname <<EOF
isoft
EOF

#Remember Run pwconv
pwconv


# root setting
# removese setup EFI_SUPPORT=true or false
EFI_SUPPORT=false
if [ -d "/sys/firmware/efi" ]; then
    EFI_SUPPORT=true
else
    EFI_SUPPORT=false
fi

if [ ${EFI_SUPPORT} = true ]; then
    export GRUB_DISTRIBUTOR="iSoft Client OS"
    export GRUB_DISABLE_RECOVERY=true
    export GRUB_FONT=/usr/share/grub/unicode.pf2
    export GRUB_GFXPAYLOAD_LINUX=keep
    bootloader_id="iSoft Client OS"
    efi_distributor=grub
    efi_file=grubx64.efi
    efidisk="$(df /boot/efi/ | grep dev | cut -c1-8)"
    efipart="$(df /boot/efi/ | grep dev | cut -c9-9)"
    grubdir="/boot/efi/EFI/$efi_distributor"
    localedir="/usr/share/locale"
    modprobe dm-mod
    grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id="$efi_distributor" --boot-directory=/boot/efi/EFI --recheck
    str=`efibootmgr | grep "$efi_distributor"`
    efibootmgr -b ${str:4:4} -B
    str1=`efibootmgr | grep "$bootloader_id"`
    efibootmgr -b ${str1:4:4} -B
    efibootmgr -c -q -d "$efidisk" -p "$efipart" -w \
        -L "$bootloader_id" -l "\\EFI\\$efi_distributor\\$efi_file"
    grub-mkconfig > "${grubdir}"/grub.cfg
    mkdir -p "${grubdir}"/locale/
    for dir in "${localedir}"/*; do
        if test -f "$dir/LC_MESSAGES/grub.mo"; then
           cp -vf "$dir/LC_MESSAGES/grub.mo" "${grubdir}/locale/${dir##*/}.mo"
        fi
    done
elif [ "${arch}" == "mipsel" ]; then
    if [ "${ROOT_DEVICE}" == "/dev/sda1" ]; then
        BOOT_PART="boot"
    elif [ "${BOOT_DEVICE}" != "/dev/sda1" ] ; then
        mv /boot /boot_tmp_bak || cp -a /boot /boot_tmp_bak
        install -d -m644 /boot
        mount /dev/sda1 /boot
        mv /boot_tmp_bak/* /boot/ || cp -a /boot_tmp_bak/* /boot/
        rmdir /boot_tmp_bak || rm -rf /boot_tmp_bak
        echo "/dev/sda1     /boot   ext4   rw  0   0" >> /etc/fstab
        UMOUNT_BOOT="umount /boot"
    fi

cat > /boot.cfg << _EOF
#iSoft Client OS For LoongSon
timeout 5
default 0

title   iSoft Client OS
    kernel /dev/fs/ext2@wd0/${BOOT_PART}/vmlinuz-linux
    initrd /dev/fs/ext2@wd0/${BOOT_PART}/initramfs-linux.img
    args console=tty root=${ROOT_DEVICE} rw quiet splash loglevel=1
title   iSoft Client OS (fallback)
    kernel /dev/fs/ext2@wd0/${BOOT_PART}/vmlinuz-linux
    initrd /dev/fs/ext2@wd0/${BOOT_PART}/initramfs-linux-fallback.img
    args console=tty root=${ROOT_DEVICE} rw quiet splash loglevel=1
_EOF

    cp /boot.cfg /boot/

cat > /boot.conf << _EOF
#iSoft Client OS For LoongSon
timeout 5
default 0

title   iSoft Client OS
    kernel (wd0)/${BOOT_PART}/vmlinuz-linux console=tty root=${ROOT_DEVICE}  rw quiet splash loglevel=1
    initrd /dev/fs/ext2@wd0/${BOOT_PART}/initramfs-linux.img
title   iSoft Client OS (fallback)
    kernel (wd0)/${BOOT_PART}/vmlinuz-linux console=tty root=${ROOT_DEVICE} rw quiet splash loglevel=1
    initrd (wd0)/${BOOT_PART}/initramfs-linux-fallback.img
_EOF

    cp /boot.conf /boot/
    ${UMOUNT_BOOT}

else
    # when no efi
    grub-install $GRUB_DEVICE
    export GRUB_DISTRIBUTOR="iSoft Client OS"
    export GRUB_DISABLE_RECOVERY=true
    grub-mkconfig > /boot/grub/grub.cfg
fi

#set lang, kdm, sudoers
chmod 640 /etc/sudoers
sed -i 's/# %wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) NOPASSWD: ALL/g' /etc/sudoers
chmod 440 /etc/sudoers

sed -i 's/#zh_CN/zh_CN/g' /etc/locale.gen
sed -i 's/#en_US/en_US/g' /etc/locale.gen
locale-gen

sed -i 's%#Server = http://ftp%Server = http://ftp%g' /etc/pacman.d/mirrorlist
[[ ${arch} == "x86_64" ]] && sed -i '/#\[multilib\]/{N;s/#//g}' /etc/pacman.conf

ln -sf vim /usr/bin/vi

test -f /etc/cups/cups-file.conf && sed -i 's/SystemGroup sys root/SystemGroup sys root users/' /etc/cups/cups-file.conf 
test -f /usr/lib/systemd/system/kdm-plymouth.service && systemctl enable kdm-plymouth || systemctl enable kdm

##pacman-key --init && pacman-key --populate archlinux

##no pacman-init.service file
##systemctl enable pacman-init
systemctl enable NetworkManager
systemctl enable smbd
systemctl enable cups
systemctl enable dkms
systemctl enable bluetooth

ret=`lspci -nD | awk '{ if($2 == "0300:" && $3 ~ /^15ad/ ) print $3}'`
if [ -z "$ret" ];then
	pacman -Rcs xf86-video-vmware open-vm-tools --noconfirm || true
fi

